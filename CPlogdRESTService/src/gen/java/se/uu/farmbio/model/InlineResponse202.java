/*
 * Conformal Prediction Log D
 * This is a Conformal Prediction Service for predicting Log D values for compounds. The  underlying model has been trained and evaluated on ChEMBL 23 data. Modeling is done using CPSign, product of GenettaSoft AB.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: info@genettasoft.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package se.uu.farmbio.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import javax.validation.constraints.*;

/**
 * Information about a running Task
 */
@ApiModel(description = "Information about a running Task")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaJerseyServerCodegen", date = "2017-05-29T12:46:15.437Z")
public class InlineResponse202   {
  @JsonProperty("uri")
  private String uri = null;

  @JsonProperty("progress")
  private BigDecimal progress = null;

  @JsonProperty("currentRuntime")
  private BigDecimal currentRuntime = null;

  public InlineResponse202 uri(String uri) {
    this.uri = uri;
    return this;
  }

   /**
   * The URI of the Task
   * @return uri
  **/
  @JsonProperty("uri")
  @ApiModelProperty(value = "The URI of the Task")
  public String getUri() {
    return uri;
  }

  public void setUri(String uri) {
    this.uri = uri;
  }

  public InlineResponse202 progress(BigDecimal progress) {
    this.progress = progress;
    return this;
  }

   /**
   * Progress [0-100%]
   * minimum: 0
   * maximum: 100
   * @return progress
  **/
  @JsonProperty("progress")
  @ApiModelProperty(value = "Progress [0-100%]")
  @DecimalMin("0")
  @DecimalMax("100")
  public BigDecimal getProgress() {
    return progress;
  }

  public void setProgress(BigDecimal progress) {
    this.progress = progress;
  }

  public InlineResponse202 currentRuntime(BigDecimal currentRuntime) {
    this.currentRuntime = currentRuntime;
    return this;
  }

   /**
   * How long the task has been running (milliseconds)
   * @return currentRuntime
  **/
  @JsonProperty("currentRuntime")
  @ApiModelProperty(value = "How long the task has been running (milliseconds)")
  public BigDecimal getCurrentRuntime() {
    return currentRuntime;
  }

  public void setCurrentRuntime(BigDecimal currentRuntime) {
    this.currentRuntime = currentRuntime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse202 inlineResponse202 = (InlineResponse202) o;
    return Objects.equals(this.uri, inlineResponse202.uri) &&
        Objects.equals(this.progress, inlineResponse202.progress) &&
        Objects.equals(this.currentRuntime, inlineResponse202.currentRuntime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uri, progress, currentRuntime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse202 {\n");
    
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("    progress: ").append(toIndentedString(progress)).append("\n");
    sb.append("    currentRuntime: ").append(toIndentedString(currentRuntime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

