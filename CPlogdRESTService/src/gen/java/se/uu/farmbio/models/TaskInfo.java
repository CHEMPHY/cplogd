/*
 * Conformal Prediction Log D
 * This is a Conformal Prediction Service for predicting Log D values for compounds. The  underlying model has been trained and evaluated on ChEMBL 23 data. Modeling is done using CPSign, product of GenettaSoft AB.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: info@genettasoft.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package se.uu.farmbio.models;

import java.util.Objects;

import javax.validation.constraints.DecimalMax;
import javax.validation.constraints.DecimalMin;

import org.json.simple.JSONObject;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Information about a running Task
 */
@ApiModel(description = "Information about a running Task")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaJerseyServerCodegen", date = "2017-05-29T12:46:15.437Z")
public class TaskInfo   {
	@JsonProperty("uri")
	private String uri = null;

	@JsonProperty("progress")
	private Double progress = null;

	@JsonProperty("currentRuntime")
	private Double currentRuntime = null;
	
	public TaskInfo(String uri, double progress, double runtime){
		this.uri = uri;
		this.progress = progress;
		this.currentRuntime = runtime;
	}

	public TaskInfo uri(String uri) {
		this.uri = uri;
		return this;
	}

	/**
	 * The URI of the Task
	 * @return uri
	 **/
	@JsonProperty("uri")
	@ApiModelProperty(value = "The URI of the Task")
	public String getUri() {
		return uri;
	}

	public void setUri(String uri) {
		this.uri = uri;
	}

	public TaskInfo progress(Double progress) {
		this.progress = progress;
		return this;
	}

	/**
	 * Progress [0-100%]
	 * minimum: 0
	 * maximum: 100
	 * @return progress
	 **/
	@JsonProperty("progress")
	@ApiModelProperty(value = "Progress [0-100%]")
	@DecimalMin("0")
	@DecimalMax("100")
	public Double getProgress() {
		return progress;
	}

	public void setProgress(Double progress) {
		this.progress = progress;
	}

	public TaskInfo currentRuntime(Double currentRuntime) {
		this.currentRuntime = currentRuntime;
		return this;
	}

	/**
	 * How long the task has been running (milliseconds)
	 * @return currentRuntime
	 **/
	@JsonProperty("currentRuntime")
	@ApiModelProperty(value = "How long the task has been running (milliseconds)")
	public Double getCurrentRuntime() {
		return currentRuntime;
	}

	public void setCurrentRuntime(Double currentRuntime) {
		this.currentRuntime = currentRuntime;
	}


	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		TaskInfo taskInfo = (TaskInfo) o;
		return Objects.equals(this.uri, taskInfo.uri) &&
				Objects.equals(this.progress, taskInfo.progress) &&
				Objects.equals(this.currentRuntime, taskInfo.currentRuntime);
	}

	@Override
	public int hashCode() {
		return Objects.hash(uri, progress, currentRuntime);
	}


	@SuppressWarnings("unchecked")
	@Override
	public String toString() {
		JSONObject res = new JSONObject();
		res.put("uri", uri);
		res.put("progress", progress);
		res.put("currentRuntime", currentRuntime);
		return res.toJSONString();
	}
	
}

